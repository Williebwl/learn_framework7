***********************************************************************************************************************************************************
*************************************************                     目录说明                    *********************************************************
***********************************************************************************************************************************************************


目录说明：
   

API：WebAPI控制器主目录

	API.System:系统模块分目录。
	API.Buisness:业务模块分目录。

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Assets：系统资源主目录。

	Assets.Css:样式文件目录。

	Assets.Images：图片文件目录。

	Assets.Js：js文件目录。

	Assets.Js.Lib: js通用类库。

	Assets.Js.Ng: angular框架。

	Assets.Js.Plugins: js第三方通用插件。

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Buisness:业务模块开发目录(具体存放规则参考System：系统模块目录)。

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Core：系统核心目录。

	Core.Component:系统组件目录。

	Core.Container：系统容器目录。

	Core.Pages：系统页面require配置文件目录。

	Core.Service：系统核心功能文件目录。

	Core.Utils：系统插件目录。


-----------------------------------------------------------------------------------------------------------------------------------------------------------

Skin：系统主题目录

	Skin.DefaultSkin：默认主题目录

-----------------------------------------------------------------------------------------------------------------------------------------------------------

System：系统模块目录。

	System.Assets:系统模块资源目录（样式和图片文件）。

	模块文件开发存放规则按照一个模块创建一个子目录。

***********************************************************************************************************************************************************
*************************************************                     命名规则                    *********************************************************
***********************************************************************************************************************************************************

命名规则：


		目录：参照大驼峰法命名法（同时尽量简单明了）

-----------------------------------------------------------------------------------------------------------------------------------------------------------

		文件：全部小写
		      
			  页面         模版文件                     控制器文件               

			  列表         模块名称.list.html			模块名称.list.js         
			  编辑         模块名称.edit.html			模块名称.edit.js  
			  查看		   模块名称.view.html           模块名称.view.js

			  模块服务以 模块名称.service.js 的方式命名 

-----------------------------------------------------------------------------------------------------------------------------------------------------------
        
		js函数：fn+加功能用途

-----------------------------------------------------------------------------------------------------------------------------------------------------------
   
        变量、函数参数名称：参照小驼峰法命名法（同时尽量简单明了）
		      其中
			  jQuery和angular 对象命名必须以$符号开始  例如：$a,$scope
			  服务对象 模块名称+Service

-----------------------------------------------------------------------------------------------------------------------------------------------------------

        控制器名称：模块名称+（页面类型，如：list、edit、view）+Ctrl
		     
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 		
		服务名称：模块或功能名称+Service   

-----------------------------------------------------------------------------------------------------------------------------------------------------------

        指令名称：bi+功能名称
 		
-----------------------------------------------------------------------------------------------------------------------------------------------------------

        过滤器名称：功能名称+Filter


***********************************************************************************************************************************************************
*************************************************                     项目依赖                    *********************************************************
***********************************************************************************************************************************************************

项目依赖：

page.js：核心容器；

page.route.js：路由容器依赖核心容器（page.js）

所有非异步加载资源直接依赖（直接或间接）核心容器（page.js）

所有异步加载资源依赖（直接或间接）路由容器（page.route.js）

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Core.Service:核心模块资源依赖路由容器（page.route.js）

各子模块资源依赖核心模块资源（Core.Service）

-----------------------------------------------------------------------------------------------------------------------------------------------------------

模块内资源依赖

在需要通信的情况下模块需要添加Service（依赖core.Service）并在控制器中引用Service


***********************************************************************************************************************************************************
*************************************************                     加载次序                    *********************************************************
***********************************************************************************************************************************************************

加载次序：
注：1.带后缀的为文件名，不带后缀为require模块名称请结合main.js查看；
    2.被依赖模块的执行优先级高于依赖它的模块；
	3.require不会重复下载同一个文件（加载地址相同）；
	4.require会在依赖的模块之间添加关联关系；

常规加载：

index.html => require.mini.js => main.js 
=> page-Route
		依赖：
			 1.page 
				 依赖：
					  1.1.angular
			 2.angular-route 
				 依赖：
					  2.1.angular
			 3.angularAMD 
				 依赖：
					  3.1.angular
			 4.paging
				 依赖：
					  4.1.page
					  4.2.angular
			 5.ngTree
				 依赖：
					  5.1.page
					  5.2.jquery
					  5.3.ztree.core
						  依赖： 
							   5.3.1.jquery 
					  5.4.ztree.excheck
						  依赖：
							   5.4.1.ztree.core
					  5.5.Skin/DefaultSkin/css/metroStyle.css
			 6.System/Index/index.js
				 依赖：
					  6.1.System/Index/index.service.js
						  依赖：
							   6.1.1.page
							   6.1.2.angular
					  6.2.preloader
						  依赖：
							   6.2.1.jquery
=> System/Index/common.js




路由加载：
注：js文件加载优先于html文件加载

首先根据在angular-route中配置的templateUrl、controllerUrl加载对应的模版和控制器文件，并根据其内部的依赖加载相关的资源（例如：js的require模块依赖、html的ng-include标签等），
然后再根据controller（控制器名称）将controllerUrl中的控制器对应到templateUrl中。


以Module模块为例。

js:

module.list.js =>
    依赖：
		 1.core.List
		      依赖：
			       1.1.page-Route（参考常规加载page-Route节点）
				   1.2.angular
				   1.3.ext
				       依赖：
					        1.3.1.jquery
		 2.angular
		 3.System/Module/module.service.js
		      依赖：
			       3.1.core.Service
				       依赖：
					        3.1.1.page-Route（参考常规加载page-Route节点）
							3.1.2.angular 
				   3.2.angular
		 4.System/Module/module.edit.js
		      依赖：
			       4.1.core.Edit
				       依赖：
					        4.1.1.page-Route （参考常规加载page-Route节点）
							4.1.2.angular
							4.1.3.ext(参考1.3)
				   4.2.System/Module/module.service.js（参考3）
				   4.3.System/Module/ico.service.js
				       依赖：
					        4.3.page-Route（参考常规加载page-Route节点）
				   4.4.ext(参考1.3)
		 5.ext(参考1.3)


html:

module.list.html => System/Module/module.edit.html


***********************************************************************************************************************************************************
*************************************************                     拓展标签                    *********************************************************
***********************************************************************************************************************************************************

拓展标签文件：Core/Component/ExtDirective/ng.extension.js

包含以下标签：
	biInclude：
	     用途：用于引入页面以及页面控制器文件
	     属性：
		       biInclude：
			   onload：加载完成事件
			   autoscroll：滚动条控制属性
			   controllerurl：页面控制器文件路径
			   target：异步加载触发对象（jquery表达式）
			   event：事件类型，默认为click
			   action：需要在页面控制器注册的函数名称（该函数可传入一个回调函数用于页面资源加载完成时调用）

	biCheckbox：	     
		  用途：列表多选联动（于input配合实现）
	      属性：
			 
	input、textarea：
	           用途：为表单元素添加样式
	           属性：

	biAttach：
	    用途：附件上传
	    属性：
			  config：在页面控制器中指定配置信息（bindUploader：可以在该函数中添加事件监听函数，fileQueued：文件上传队列启动函数，可用于实现单文件上传显示控制）
			          其它配置信息可参考：http://fex.baidu.com/webuploader/doc/index.html#WebUploader_Uploader_options
			  bi-attach或table：业务表名
			  type：用户自定义类型（int类型）默认为0
			  iconsize：文件图标大小默认为（16*16）
			  multiple：true|false，默认为true，为false时只能选择单个文件上传
			  isimg：true|false，默认为false，为true时只能上传（gif,jpg,jpeg,bmp,png）类型的图片文件


拓展标签文件：Core/Component/Validate/ng.formValidate.js

包含以下标签：
	biFormValidate：
			  用途：用于页面表单验证
			  属性：


***********************************************************************************************************************************************************
*************************************************                     开发守则                    *********************************************************
***********************************************************************************************************************************************************

开发守则：



































